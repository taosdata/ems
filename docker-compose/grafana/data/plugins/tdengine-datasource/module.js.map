{"version":3,"file":"module.js","mappings":"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","sources":["webpack://tdengine-datasource/./components/ConfigEditor/ConfigEditor.css","webpack://tdengine-datasource/../node_modules/css-loader/dist/runtime/api.js","webpack://tdengine-datasource/../node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://tdengine-datasource/../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://tdengine-datasource/../node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://tdengine-datasource/../node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://tdengine-datasource/../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://tdengine-datasource/../node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://tdengine-datasource/../node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://tdengine-datasource/external amd \"@grafana/data\"","webpack://tdengine-datasource/external amd \"@grafana/runtime\"","webpack://tdengine-datasource/external amd \"@grafana/ui\"","webpack://tdengine-datasource/external amd \"lodash\"","webpack://tdengine-datasource/external amd \"module\"","webpack://tdengine-datasource/external amd \"moment\"","webpack://tdengine-datasource/external amd \"react\"","webpack://tdengine-datasource/webpack/bootstrap","webpack://tdengine-datasource/webpack/runtime/compat get default export","webpack://tdengine-datasource/webpack/runtime/define property getters","webpack://tdengine-datasource/webpack/runtime/hasOwnProperty shorthand","webpack://tdengine-datasource/webpack/runtime/make namespace object","webpack://tdengine-datasource/webpack/runtime/publicPath","webpack://tdengine-datasource/webpack/runtime/nonce","webpack://tdengine-datasource/./node_modules/grafana-public-path.js","webpack://tdengine-datasource/./utils.ts","webpack://tdengine-datasource/./datasource.ts","webpack://tdengine-datasource/./components/ConfigEditor/useChangeSecureOptions.tsx","webpack://tdengine-datasource/./components/ConfigEditor/useResetSecureOptions.tsx","webpack://tdengine-datasource/./components/ConfigEditor/ConfigEditor.css?725d","webpack://tdengine-datasource/./components/ConfigEditor/ConfigEditor.tsx","webpack://tdengine-datasource/./components/QueryEditor/useSelectableValue.tsx","webpack://tdengine-datasource/./components/QueryEditor/useChangeSelectableValue.tsx","webpack://tdengine-datasource/./components/QueryEditor/useChangeString.tsx","webpack://tdengine-datasource/./module.ts","webpack://tdengine-datasource/./components/QueryEditor/QueryEditor.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.align-center{\n    align-items: center;\n}\n.switch-wrapper {\n    border: 1px solid #f6f3f3;\n    padding: 5px;\n}\n\n.custom-button {\n    background-color: #d10e5c; /* Button background color */\n    color: white; /* text color */\n    border: none;\n    padding: 8px 16px; /* Inner margin adjustment button size */\n    border-radius: 2px; /* Set a larger fillet radius close to an ellipse */\n    cursor: pointer;\n    transition: background-color 0.3s ease; /* Transition effect makes interaction smoother */\n    font-size: 14px; /* font size */\n    text-transform: uppercase; /* capital letter */\n    letter-spacing: 1px; /* letter-spacing */\n    height: 20px; /* Set button height */\n    width: 10px; /* Set button width */\n}\n.custom-button:hover {\n    background-color: #eb0637; /* Background color when hovering */\n    color: white; /* Text color when hovering */\n}\n\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./components/ConfigEditor/ConfigEditor.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,mBAAmB;AACvB;AACA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,yBAAyB,EAAE,4BAA4B;IACvD,YAAY,EAAE,eAAe;IAC7B,YAAY;IACZ,iBAAiB,EAAE,wCAAwC;IAC3D,kBAAkB,EAAE,mDAAmD;IACvE,eAAe;IACf,sCAAsC,EAAE,iDAAiD;IACzF,eAAe,EAAE,cAAc;IAC/B,yBAAyB,EAAE,mBAAmB;IAC9C,mBAAmB,EAAE,mBAAmB;IACxC,YAAY,EAAE,sBAAsB;IACpC,WAAW,EAAE,qBAAqB;AACtC;AACA;IACI,yBAAyB,EAAE,mCAAmC;IAC9D,YAAY,EAAE,6BAA6B;AAC/C\",\"sourcesContent\":[\".align-center{\\n    align-items: center;\\n}\\n.switch-wrapper {\\n    border: 1px solid #f6f3f3;\\n    padding: 5px;\\n}\\n\\n.custom-button {\\n    background-color: #d10e5c; /* Button background color */\\n    color: white; /* text color */\\n    border: none;\\n    padding: 8px 16px; /* Inner margin adjustment button size */\\n    border-radius: 2px; /* Set a larger fillet radius close to an ellipse */\\n    cursor: pointer;\\n    transition: background-color 0.3s ease; /* Transition effect makes interaction smoother */\\n    font-size: 14px; /* font size */\\n    text-transform: uppercase; /* capital letter */\\n    letter-spacing: 1px; /* letter-spacing */\\n    height: 20px; /* Set button height */\\n    width: 10px; /* Set button width */\\n}\\n.custom-button:hover {\\n    background-color: #eb0637; /* Background color when hovering */\\n    color: white; /* Text color when hovering */\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","module.exports = __WEBPACK_EXTERNAL_MODULE__781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__531__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__241__;","module.exports = __WEBPACK_EXTERNAL_MODULE__308__;","module.exports = __WEBPACK_EXTERNAL_MODULE__468__;","module.exports = __WEBPACK_EXTERNAL_MODULE__959__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"public/plugins/tdengine-datasource/\";","__webpack_require__.nc = undefined;","\nimport amdMetaModule from 'amd-module';\n\n__webpack_public_path__ =\n  amdMetaModule && amdMetaModule.uri\n    ? amdMetaModule.uri.slice(0, amdMetaModule.uri.lastIndexOf('/') + 1)\n    : 'public/plugins/tdengine-datasource/';\n","import { config, getBackendSrv } from '@grafana/runtime';\n\nexport async function deleteAlerts(datasourceName: string): Promise<void> {\n    try {\n        \n        let folderUid = getFolderUid(datasourceName);\n        await deletGroupAlerts(\"alert_1m\", folderUid);\n        await deletGroupAlerts(\"alert_5m\", folderUid);\n        await deletGroupAlerts(\"alert_30s\", folderUid);\n        await deletGroupAlerts(\"alert_90s\", folderUid);\n        await deletGroupAlerts(\"alert_180s\", folderUid);\n        await deletGroupAlerts(\"alert_24h\", folderUid);\n        await deleteFolder(folderUid);\n        // updateDataSourceOptions(datasourceName);\n    } catch (error) {\n        console.error('Error in async function:', error);\n        throw error;\n    }\n}\n\n// async function updateDataSourceOptions(datasourceUid: string) {\n//     try {\n//         let path = `/api/datasources/uid/${datasourceUid}`;\n//         let response = await getBackendSrv().get(path);\n//         response.jsonData.isLoadAlerts = false;\n//         response = getBackendSrv().put(path, response);\n//         console.log(response);\n//     } catch(e) {\n//         console.error(e);\n//         throw e;\n//     }\n// }\n\nfunction deletGroupAlerts(ruleGroup: string, datasourceName: string): Promise<boolean> {\n    return new Promise(async (resolve, reject) => {\n        let path = `/api/v1/provisioning/folder/${datasourceName}/rule-groups/${ruleGroup}`;\n        getBackendSrv().delete(path, {}, {responseType :'text', showErrorAlert:false}).then(response => {resolve(true)}).catch(error => {\n            console.error(error);\n            resolve(false);\n        })\n    })\n}\n\nasync function deleteFolder(folderUid: string): Promise<boolean> {\n    return new Promise(async (resolve, reject) => {\n        let path = `/api/folders/${folderUid}`\n        getBackendSrv().delete(path, {}, {responseType :'text', showErrorAlert:false}).then(response => {resolve(true)}).catch(error => {\n            console.error(error);\n            resolve(false);\n        })\n    })\n}\n\nexport function getFolderUid(datasourceUid: string): string {\n    return `alert-${datasourceUid}-`;\n}\n\nexport function checkGrafanaVersion(): boolean {\n    const version = config.buildInfo.version;\n    const versionParts = version.split(\".\");\n    if (versionParts.length > 0) {\n        const majorVersion = parseInt(versionParts[0], 10);\n        if (majorVersion === 11) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport function getCurrentTime(): string {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0');\n    const day = String(now.getDate()).padStart(2, '0');\n    const hours = String(now.getHours()).padStart(2, '0');\n    const minutes = String(now.getMinutes()).padStart(2, '0');\n    const seconds = String(now.getSeconds()).padStart(2, '0');\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\n","import {\n    DataQueryRequest,\n    DataQueryResponse,\n    DataSourceApi,\n    DataSourceInstanceSettings,\n    MetricFindValue\n} from '@grafana/data'\nimport {BackendSrv, getBackendSrv, getTemplateSrv, TemplateSrv} from '@grafana/runtime'\nimport {DataSourceOptions, Query} from './types';\nimport _, {uniqBy} from \"lodash\";\n// eslint-disable-next-line no-restricted-imports\nimport moment from 'moment';\n// import axios from 'axios';\nimport data from './alert_rules.json'\nimport { checkGrafanaVersion, getFolderUid } from './utils'\n\nexport class DataSource extends DataSourceApi<Query, DataSourceOptions> {\n    baseUrl: string\n    backendSrv: BackendSrv\n    template: TemplateSrv\n    timezone = ''\n    lastGeneratedSql = ''\n    serverVersion = 0\n    isLoadAlerts?: boolean\n    folderUidSuffix?: string\n\n    constructor(instanceSettings: DataSourceInstanceSettings<DataSourceOptions>) {\n        super(instanceSettings);\n        this.baseUrl = instanceSettings.url!\n        this.backendSrv = getBackendSrv()\n        this.template = getTemplateSrv()\n        this.isLoadAlerts = instanceSettings.jsonData.isLoadAlerts;\n        this.folderUidSuffix = instanceSettings.jsonData.folderUidSuffix;\n    }\n\n    // @ts-ignore\n    query(options: DataQueryRequest<Query>): Promise<DataQueryResponse> {\n        if (options.timezone) {\n            this.timezone = options.timezone === \"browser\" ? Intl.DateTimeFormat().resolvedOptions().timeZone : options.timezone;\n        } else {\n            this.timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        }\n        const targets = options.targets.filter((target) => (!target.queryType || target.queryType === \"SQL\") && target.sql && !(target.hide === true));\n        if (targets.length === 0) {\n            // @ts-ignore\n            return Promise.all([])\n        }\n        return Promise.all(targets.map(target => {\n            let sql = this.generateSql(target.sql, options);\n            this.lastGeneratedSql = sql;\n            return this.request(sql).then((res: any) => this.postQuery(target, res, options));\n        })).then(data => {\n            let result = this.arithmeticQueries(data, options).flat();\n            return {data: result};\n        }, (err) => {\n            console.error(err);\n            if (err.data && err.data.desc) {\n                throw new Error(err.data.desc);\n            } else {\n                throw new Error(err);\n            }\n        });\n    }\n\n    getAlertFolder(): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            let uid = getFolderUid(`${this.uid}`)\n            this.backendSrv.get(`/api/folders/${uid}`, {}, \"\", {showErrorAlert:false}).then((response) => {\n                resolve(true)\n               \n            }).catch((e: any) => {\n                console.error(e)\n                if(e.status === 404) {\n                    resolve(false)\n                }else {\n                    reject(e)\n                }\n            })\n        })\n    }\n\n    createAlertFolder(): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            let req = {uid: getFolderUid(`${this.uid}`), title: this.name + '-alert-' + this.folderUidSuffix}\n            this.backendSrv.post(\"/api/folders\", req).then(response=>{\n                resolve(true)\n            }).catch((e: any) => {\n                console.error(e)\n                if(e.status === 409) {\n                    resolve(true)\n                }else{\n                    reject(e)\n                }\n\n            })\n        });\n    }\n\n    async getAlerts(ruleGroup: string): Promise<boolean>{\n        try{\n            let uid = getFolderUid(`${this.uid}`)\n            let path = `/api/v1/provisioning/folder/${uid}/rule-groups/${ruleGroup}`;\n            let response = await this.backendSrv.get(path, {}, \"\", {showErrorAlert:false});\n            if (!!response && response.rules.length > 0) {\n                return true;\n            }\n            return false;\n        }catch(e: any) {\n            if(e.status === 404) {\n                return false;\n            }\n            console.error(e);\n            throw e;\n        }\n    }\n\n    async loadAlerts(ruleGroup: string, data: any): Promise<boolean>{\n        try{\n            let uid = getFolderUid(`${this.uid}`)\n            let path = `/api/v1/provisioning/folder/${uid}/rule-groups/${ruleGroup}`;\n            let response = await this.backendSrv.put(path, data, {\n                headers: {\n                    'X-Disable-Provenance': 'true'\n                }\n            });\n\n            if (!!response) {\n                return true;\n            }\n\n            return false;\n        }catch(e: any) {\n            console.error(e);\n            let err = {\n                status: \"error\",\n                message: \"Failed to load alarm rule directory, reason: \" + e.message,\n                title: \"Failed\"\n            };\n            throw err;\n        }\n    }\n\n    modifyAlertDataSource(ruleGroup: any) {\n        ruleGroup.folderUid = getFolderUid(`${this.uid}`);\n        let count = ruleGroup.rules.length;\n        for (let index = 0; index < count; index++) {\n            ruleGroup.rules[index].folderUID = ruleGroup.folderUid;\n            ruleGroup.rules[index].data[0].datasourceUid = this.uid;\n            ruleGroup.rules[index].data[0].model.datasource.uid = this.uid;\n        }\n    }\n\n    sendInitAlert(): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                let bSuport = checkGrafanaVersion();\n                if (bSuport) {\n                    let bOk = await this.getAlertFolder();\n                    if (!bOk) {\n                        bOk = await this.createAlertFolder();\n                    }\n\n                    if (bOk) {\n                        bOk = await this.getAlerts(\"alert_1m\");\n                        if (!bOk) {\n                            this.modifyAlertDataSource(data.alert_1m);\n                            await this.loadAlerts(\"alert_1m\", data.alert_1m);\n                        }\n\n                        bOk = await this.getAlerts(\"alert_5m\");\n                        if (!bOk) {\n                            this.modifyAlertDataSource(data.alert_5m);\n                            await this.loadAlerts(\"alert_5m\", data.alert_5m);\n                        }\n\n                        bOk = await this.getAlerts(\"alert_30s\");\n                        if (!bOk) {\n                            this.modifyAlertDataSource(data.alert_30s);\n                            await this.loadAlerts(\"alert_30s\", data.alert_30s);\n                        }\n\n                        bOk = await this.getAlerts(\"alert_90s\");\n                        if (!bOk) {\n                            this.modifyAlertDataSource(data.alert_90s);\n                            await this.loadAlerts(\"alert_90s\", data.alert_90s);\n                        }\n\n                        bOk = await this.getAlerts(\"alert_180s\");\n                        if (!bOk) {\n                            this.modifyAlertDataSource(data.alert_180s);\n                            await this.loadAlerts(\"alert_180s\", data.alert_180s);\n                        }\n\n                        bOk = await this.getAlerts(\"alert_24h\");\n                        if (!bOk) {\n                            this.modifyAlertDataSource(data.alert_24h);\n                            await this.loadAlerts(\"alert_24h\", data.alert_24h);\n                        }\n                        \n                    }\n                }\n                resolve();\n            } catch(e) {\n                console.error(e);\n                reject(e);\n            }\n        })\n    }\n\n    testDatasource() { // save & test button\n        return this.request('show databases').then((response: { status: number; data: { message: string; }; }) => {\n            if (!!response && response.status === 200 && !_.get(response, 'data.code')) {\n                if (this.isLoadAlerts === true) {\n                    return this.sendInitAlert().then(()=>{\n                        return {status: \"success\", message: \"TDengine Data source is working\", title: \"Success\"};\n                    }).catch((e: any) => {\n                        return {status: \"error\", message: \"TDengine Data source is working, but alert rules load failed, reason:\" + e.message, title: \"Failed\"};\n                    });\n                } else {\n                    return {status: \"success\", message: \"TDengine Data source is working\", title: \"Success\"};\n                }\n\n            }\n            return {\n                status: \"error\",\n                message: \"TDengine Data source is not working, reason: \" + response.data.message,\n                title: \"Failed\"\n            };\n        });\n    }\n\n    metricFindQuery(query: any, options: any): Promise<MetricFindValue[]> {\n        return this.request(this.generateSql(query, options)).then(res => {\n            if (!res?.data?.data) {\n                return [];\n            }\n\n            const column_meta = res.data.column_meta || [];\n            const hasTextAndValue = column_meta.length === 2 &&\n                ((column_meta[0][0] === \"__text\" && column_meta[1][0] === \"__value\")\n                    || (column_meta[1][0] === \"__text\" && column_meta[0][0] === \"__value\"));\n\n            let values: MetricFindValue[] = [];\n            if (hasTextAndValue) {\n                let text_index = 0;\n                let string_value = false;\n                if (res.data.column_meta[1][0] === \"__text\") {\n                    text_index = 1\n                }\n                let value_type = res.data.column_meta[1 - text_index][1].toUpperCase();\n                if (value_type === \"NCHAR\" || value_type === \"BINARY\" || value_type === \"VARCHAR\") {\n                    string_value = true\n                }\n\n                for (let i = 0; i < res.data.data.length; i++) {\n                    let text = '' + res.data.data[i][text_index];\n                    let value = res.data.data[i][1 - text_index]\n\n                    if (string_value) {\n                        value = \"'\" + value + \"'\";\n                    }\n\n                    values.push({text: text, value: value})\n                }\n            } else {\n                for (let i = 0; i < res.data.data.length; i++) {\n                    values.push({text: '' + res.data.data[i]});\n                }\n            }\n\n            return uniqBy(values, \"text\");\n        });\n    }\n\n    getGenerateSql(): string {\n        return this.lastGeneratedSql\n    }\n\n    request(sql: string) {\n        if (!sql) {\n            return new Promise<void>((resolve, reject) => {\n                resolve();\n            });\n        }\n        if (this.serverVersion === 0) {\n            return this.backendSrv.datasourceRequest({\n                url: this.baseUrl + \"/sql\",\n                data: \"select server_version()\",\n                method: 'POST',\n            }).then((res) => {\n                if (res.data.data[0][0].startsWith(\"3\")) {\n                    this.serverVersion = 3;\n                    return this.querySql(sql);\n                } else {\n                    this.serverVersion = 2;\n                    return this.querySqlUtc(sql);\n                }\n            }).catch(err => {\n                return err;\n            });\n        } else if (this.serverVersion === 3) {\n            return this.querySql(sql);\n        } else {\n            return this.querySqlUtc(sql);\n        }\n    }\n\n    querySql(sql: string) {\n        return this.backendSrv.datasourceRequest({\n            url: this.baseUrl + \"/sql\",\n            data: sql,\n            method: 'POST',\n        }).then((result) => {\n            result.data = this.convertResult(result.data);\n            return result;\n        }).catch(err => {\n            console.error(\"catch error: \", err);\n        });\n    }\n\n    querySqlUtc(sql: string) {\n        return this.backendSrv.datasourceRequest({\n            url: this.baseUrl + \"/sqlutc\",\n            data: sql,\n            method: 'POST',\n        });\n    }\n\n    convertResult(src: any) {\n        let dist = {\n            status: \"\",\n            code: undefined,\n            desc: undefined,\n            column_meta: undefined,\n            data: undefined,\n            rows: 0,\n        }\n        if (src.code === 0) {\n            dist.status = \"succ\";\n            dist.column_meta = src.column_meta;\n            // @ts-ignore\n            dist.column_meta.forEach(element => {\n                if (element[1] === \"TIMESTAMP\") {\n                    element[1] = 9;\n                }\n            });\n            dist.data = src.data;\n            dist.rows = src.rows;\n        } else {\n            dist.status = \"error\";\n            dist.code = src.code;\n            dist.desc = src.desc;\n        }\n\n        return dist;\n    }\n\n    getRowAlias(alias: string, replaceObject: any, options: DataQueryRequest<Query>) {\n        if (!alias) {\n            return Object.values(replaceObject)[0];\n        }\n        alias = this.generateSql(alias, options);\n        const regex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)\\]\\]|\\{\\{([\\s\\S]+?)\\}\\}/g;\n        return alias.replace(regex, (match, g1, g2, g3) => {\n            const group = g1 || g2 || g3;\n            return replaceObject[group] || match;\n        });\n    }\n\n    generateSql(sql: string, options: DataQueryRequest<Query>) {\n        if (!sql || sql.length === 0) {\n            return sql;\n        }\n\n        let queryStart = \"now-1h\";\n        let queryEnd = \"now\";\n        let intervalMs = \"20000\";\n        if (!!options) {\n            if (!!options.range && !!options.range.from) {\n                queryStart = options.range.from.toISOString();\n            }\n\n            if (!!options.range && !!options.range.to) {\n                queryEnd = options.range.to.toISOString();\n            }\n\n            if (!!options.intervalMs) {\n                intervalMs = options.intervalMs.toString();\n            }\n\n            sql = this.template.replace(sql, options.scopedVars, 'csv');\n        }\n\n        intervalMs += \"a\";\n        sql = sql.replace(/^\\s+|\\s+$/gm, '');\n        if (queryStart.indexOf(\"now\") < 0) {\n            sql = sql.replace(/\\$from/g, \"'\" + queryStart + \"'\");\n            sql = sql.replace(/\\$begin/g, \"'\" + queryStart + \"'\");\n        } else {\n            sql = sql.replace(/\\$from/g, queryStart);\n            sql = sql.replace(/\\$begin/g, queryStart);\n        }\n        if (queryEnd.indexOf(\"now\") < 0) {\n            sql = sql.replace(/\\$to/g, \"'\" + queryEnd + \"'\");\n            sql = sql.replace(/\\$end/g, \"'\" + queryEnd + \"'\");\n        } else {\n            sql = sql.replace(/\\$to/g, queryEnd);\n            sql = sql.replace(/\\$end/g, queryEnd);\n        }\n        sql = sql.replace(/\\$interval/g, intervalMs);\n\n        const allVariables = this.template.getVariables()\n        for (const variable of allVariables) {\n            if (\"current\" in variable && variable.current && variable.current.value) {\n                sql = sql.replace(\"$\" + variable.name, String(variable.current.value))\n            }\n        }\n\n        return sql;\n    }\n\n    formatColumn(colFormat: string, labelName: any) {\n        let placeholders = colFormat.match(/\\{\\{(\\w+)\\}\\}/g)\n        if (!placeholders) {\n            return colFormat;\n        }\n        for (let placeholder of placeholders) {\n            // @ts-ignore\n            let field = placeholder.replaceAll('{{', '')\n            field = field.replaceAll('}}', '')\n            let value = labelName[field]\n            if (value) {\n                // @ts-ignore\n                colFormat = colFormat.replaceAll(placeholder, value)\n            }\n        }\n        return colFormat;\n    }\n\n    long2wide(recv: any, by: string[], colFormat: string) {\n        let data = recv.data;\n        let header = recv.column_meta;\n        if (_.size(by) === 0) {\n            return recv;\n        }\n\n        let name2idx = _(header).map((h, i) => [h[0], i]).fromPairs().value();\n        _.remove(by, k => !_.has(name2idx, k));\n\n        if (_.size(by) === 0) {\n            return recv;\n        }\n\n        let [colKick, colLock] = _(header).slice(1).partition(h => _.includes(by, h[0])).value();\n        let newHeader = [header[0]];\n\n        let fields = _.map(colLock, (h, i) => {\n            let colValue = _(colKick).map(col => {\n                let idx = name2idx[col[0]];\n                return _(data).map(row => row[idx]).uniq().map(v => _.fromPairs([[col[0], v]])).value();\n            }).reduce((acc, cur) => {\n                return _(acc).map(o => {\n                    return _.map(cur, n => _.extend({}, o, n))\n                }).flatten().value()\n            });\n            return {field: h, name: h[0], labels: colValue};\n        });\n\n        let ts = _(data).map(row => row[0]).orderBy().uniq().value();\n\n        // values long to wide\n        _.forEach(fields, field => {\n            let col = name2idx[field.name];\n            // @ts-ignore\n            field.labels = _(field.labels).map(label => {\n                let values = _(data).filter(row => {\n                    return _(label).map((v, f) => row[name2idx[f]] === v).reduce((acc, cur) => acc && cur)\n                }).map(row => [row[0], row[col]]).fromPairs().value();\n                if (_.size(values) > 0) {\n                    return _.extend(label, {__values__: values});\n                } else {\n                    return null;\n                }\n            }).filter().value();\n        });\n\n        // rebuild headers\n        _.forEach(fields, field => {\n            _.forEach(field.labels, label => {\n                let newField = _.cloneDeep(field.field);\n                let labelName = _(label).keys().filter(k => k !== '__values__').map(key => [key, label[key]]).fromPairs().value();\n                if (colFormat) {\n                    newField[0] = this.formatColumn(colFormat, labelName);\n                } else {\n                    newField[0] = field.name + \" \" + JSON.stringify(labelName);\n                }\n                newHeader.push(newField);\n            })\n        })\n\n        // construct new data\n        let newData = _.map(ts, t => {\n            let row = [t];\n            _.forEach(fields, field => {\n                _.forEach(field.labels, label => {\n                    row.push(_.get(label.__values__, t));\n                })\n            });\n            return row;\n        })\n\n        return {data: newData, column_meta: newHeader, rows: _.size(ts)};\n    }\n\n    groupDataByColName(dataRecv: any, query: Query, options: DataQueryRequest<Query>) {\n        if (query.formatType === \"Time series\" && query.queryType === \"SQL\") {\n            let groupBy = null;\n            if (!!query.colNameToGroup) {\n                groupBy = _.trim(query.colNameToGroup);\n            } else {\n                let m = query.sql.match(/group +by +([^()\\s,]+(,\\s*\\S+)*)\\s*[^(,)]*$/);\n                if (m) {\n                    groupBy = m[1];\n                } else {\n                    return [dataRecv];\n                }\n\n                let by = _(groupBy).split(\",\").map(s => _.trim(s)).value();\n                if (_.size(by) > 0) {\n                    return [this.long2wide(dataRecv, by, query.colNameFormatStr)];\n                } else {\n                    return [dataRecv];\n                }\n            }\n            if (!groupBy || query.colNameToGroup.length === 0) {\n                return [dataRecv];\n            }\n\n            let by = _(groupBy).split(\",\").map(s => _.trim(s)).value();\n            if (_.size(by) > 0) {\n                return [this.long2wide(dataRecv, by, query.colNameFormatStr)];\n            } else {\n                return [dataRecv];\n            }\n        }\n\n        if (!query.colNameToGroup || query.colNameToGroup.length === 0) {\n            return [dataRecv];\n        }\n\n        for (let index = 0; index < dataRecv.column_meta.length; index++) {\n            if (dataRecv.column_meta[index][0] === query.colNameToGroup) {\n                let groupData = {};\n                const data = dataRecv.data;\n                const rows = dataRecv.rows;\n                for (let rowsIndex = 0; rowsIndex < rows; rowsIndex++) {\n                    let groupColValue = data[rowsIndex][index];\n                    // @ts-ignore\n                    if (!groupData[groupColValue]) {\n                        // @ts-ignore\n                        groupData[groupColValue] = {column_meta: [], data: [], rows: 0};\n                        for (let k = 0; k < dataRecv.column_meta.length; k++) {\n                            if (k !== index) {\n                                let header = [...dataRecv.column_meta[k]];\n                                if (!(k === 0 && header[1] === 9)) {\n                                    header[0] = this.getRowAlias(query.colNameFormatStr || \"prefix_{{group_field}}\", {\n                                        colName: header[0],\n                                        groupValue: groupColValue\n                                    }, options);\n                                }\n                                // @ts-ignore\n                                groupData[groupColValue].column_meta.push(header);\n                            }\n                        }\n                    }\n                    data[rowsIndex].splice(index, 1);\n                    // @ts-ignore\n                    groupData[groupColValue].data.push(data[rowsIndex]);\n                    // @ts-ignore\n                    groupData[groupColValue].rows += 1;\n                }\n                let keys = Object.keys(groupData).sort();\n                let groupDataRet = [];\n                for (let indexKeys = 0; indexKeys < keys.length; indexKeys++) {\n                    // @ts-ignore\n                    groupDataRet.push(groupData[keys[indexKeys]]);\n                }\n                return groupDataRet;\n            }\n        }\n        return [dataRecv];\n    }\n\n    postQuery(query: Query, response: DataQueryResponse, options: DataQueryRequest<Query>) {\n        // @ts-ignore\n        if (!response || !response.data || !response.data.data) {\n            return [];\n        }\n        let dataGroupList = this.groupDataByColName(response.data, query, options);\n        const result = [];\n        const aliasList = (query.alias || '').split(',') || [];\n        let aliasListIndex = 0;\n        for (let index = 0; index < dataGroupList.length; index++) {\n            const headers = dataGroupList[index].column_meta;\n            const data = dataGroupList[index].data;\n            const rows = dataGroupList[index].rows;\n            const cols = headers.length;\n            if (!!headers && !!headers[0] && !!headers[0][1]) {\n                const timeSeriesIndex = headers.findIndex((item: number[]) => item[1] === 9);\n                if (timeSeriesIndex === -1 || query.formatType === \"Table\") {\n                    result.push({\n                        columns: headers.map((item: any[]) => ({text: item[0]})),\n                        rows: data,\n                        type: 'table',\n                        refId: query.refId,\n                        target: this.getRowAlias(aliasList[0], {col: headers[0][0]}, options),\n                        hide: !!query.hide\n                    });\n                } else {\n                    for (let i = 0; i < cols; i++) {\n                        if (i === timeSeriesIndex) {\n                            continue;\n                        }\n                        let aliasRow = headers[i][0];\n                        if (aliasListIndex < aliasList.length) {\n                            aliasRow = this.getRowAlias(aliasList[aliasListIndex], {col: aliasRow}, options);\n                            aliasListIndex++;\n                        }\n                        let resultItem = {datapoints: [], refId: query.refId, target: aliasRow, hide: !!query.hide};\n                        for (let k = 0; k < rows; k++) {\n                            let timeShiftDuration = moment.duration();\n                            if (query.timeShiftPeriod && query.timeShiftUnit) {\n                                // @ts-ignore\n                                timeShiftDuration = moment.duration(query.timeShiftPeriod, query.timeShiftUnit);\n                            }\n                            // @ts-ignore\n                            resultItem.datapoints.push([data[k][i], moment.utc(data[k][timeSeriesIndex]).tz(this.timezone).add(timeShiftDuration).valueOf()]);\n                        }\n                        result.push(resultItem);\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    arithmeticQueries(data: any, options: DataQueryRequest<Query>) {\n        const arithmeticQueries = options.targets.filter((target) => target.queryType === \"Arithmetic\" && target.expression && !(target.hide === true));\n        if (arithmeticQueries.length === 0) {\n            return data;\n        }\n        let targetRefIds = data.flatMap((item: any[]) => item.flatMap((field, index) => (index === 0 ? [field.refId, field.refId + '__' + index] : [field.refId + '__' + index])));\n        let targetResults = {};\n        data.forEach((item: any[]) => {\n            item.forEach((field, index) => {\n                field.datapoints.forEach((datapoint: any[]) => {\n                    // @ts-ignore\n                    targetResults[datapoint[1]] = targetResults[datapoint[1]] || [];\n                    if (index === 0) {\n                        // @ts-ignore\n                        targetResults[datapoint[1]].push(datapoint[0]);\n                    }\n                    // @ts-ignore\n                    targetResults[datapoint[1]].push(datapoint[0]);\n                })\n            })\n        });\n\n        try {\n            let dataArithmetic = arithmeticQueries.map(target => {\n                let functionArgs = targetRefIds.join(', ');\n                let functionBody = \"return (\" + target.expression + \");\";\n                let expressionFunction = new Function(functionArgs, functionBody);\n                let result: any[] | null = null;\n                const aliasList = (target.alias || '').split(',').map(alias => this.getRowAlias(alias, {col: target.refId}, options));\n\n                const aliasListResult: any[] = [];\n                Object.entries(targetResults).forEach(args => {\n                    // @ts-ignore\n                    if (args[1].length === targetRefIds.length) {\n                        try {\n                            result = expressionFunction.apply(this, args[1]);\n                        } catch (error) {\n                            throw error\n                        }\n                    }\n                    if (!Array.isArray(result)) {\n                        result = [result];\n                    }\n                    result.forEach((item, index) => {\n                        aliasListResult[index] = aliasListResult[index] || {\n                            datapoints: [],\n                            refId: target.refId,\n                            target: aliasList[index] || (target.refId + '__' + index),\n                            hide: !!target.hide\n                        };\n                        aliasListResult[index].datapoints.push([item, parseInt(args[0], 10)]);\n                    })\n                });\n                return aliasListResult;\n            });\n            return data.concat(dataArithmetic);\n        } catch (err) {\n            // @ts-ignore\n            throw new Error(err);\n        }\n    }\n\n    generateTimeshift(options: DataQueryRequest<Query>, target: Query) {\n        let alias = target.alias || \"\";\n        alias = this.template.replace(alias, options.scopedVars, 'csv');\n        return alias;\n    }\n\n    generateAlias(options: DataQueryRequest<Query>, target: Query) {\n        let alias = target.alias || \"\";\n        alias = this.template.replace(alias, options.scopedVars, 'csv');\n        return alias;\n    }\n}\n","import {ChangeEvent, useCallback} from 'react'\nimport type {SecureJsonData} from 'types'\nimport type {EditorProps} from './types'\n\nexport function useChangeSecureOptions(props: EditorProps, propertyName: keyof SecureJsonData): (event: ChangeEvent<HTMLInputElement>) => void {\n    const {onOptionsChange, options} = props;\n    return useCallback((event: ChangeEvent<HTMLInputElement>) => {\n            if (propertyName === 'url') {\n                options.url = event.target.value\n            }\n\n            if (propertyName === 'user') {\n                options.user = event.target.value\n                options.basicAuthUser = event.target.value\n            }\n\n            if (propertyName === 'user' && options.secureJsonData?.password) {\n                options.basicAuth = true\n                options.secureJsonData.basicAuth = encode(event.target.value + \":\" + options.secureJsonData.password)\n            }\n\n            if (propertyName === \"password\" && options.secureJsonData?.user) {\n                options.basicAuth = true\n                options.secureJsonData.basicAuth = encode(options.secureJsonData.user + \":\" + event.target.value)\n            }\n\n            if (propertyName === 'password' && options.secureJsonData) {\n                options.secureJsonData.basicAuthPassword = event.target.value\n            }\n\n            if (propertyName === 'token' && options.secureJsonData) {\n                options.secureJsonData.token = event.target.value\n            }\n            \n            onOptionsChange({\n                ...options,\n                secureJsonData: {\n                    ...options.secureJsonData,\n                    [propertyName]: event.target.value,\n                },\n            })\n        },\n        [onOptionsChange, options, propertyName]\n    );\n}\n\nfunction encode(input: string): string {\n    const _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    let output = \"\";\n    let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    let i = 0;\n    while (i < input.length) {\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n        enc1 = chr1 >> 2;\n        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n        enc4 = chr3 & 63;\n        if (isNaN(chr2)) {\n            enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n            enc4 = 64;\n        }\n        output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n    }\n\n    return output;\n}\n","import {useCallback} from 'react'\nimport type {SecureJsonData} from 'types'\nimport type {EditorProps} from './types'\n\nexport function useResetSecureOptions(props: EditorProps, propertyName: keyof SecureJsonData): () => void {\n    const {onOptionsChange, options} = props;\n\n    return useCallback(() => {\n        onOptionsChange({\n            ...options,\n            secureJsonFields: {\n                ...options.secureJsonFields,\n                [propertyName]: false,\n            },\n            secureJsonData: {\n                ...options.secureJsonData,\n                [propertyName]: '',\n            },\n        });\n    }, [onOptionsChange, options, propertyName]);\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./ConfigEditor.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./ConfigEditor.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {ReactElement,useEffect} from 'react'\nimport {Button, Modal, ConfirmModal, FieldSet, LegacyForms, Switch, Tab, TabContent, TabsBar, Icon} from '@grafana/ui'\nimport type {EditorProps} from './types'\nimport {useChangeSecureOptions} from './useChangeSecureOptions'\nimport {useResetSecureOptions} from './useResetSecureOptions'\nimport {deleteAlerts, checkGrafanaVersion, getCurrentTime} from '../../utils'\n\nimport './ConfigEditor.css'\n\nconst {SecretFormField, FormField} = LegacyForms;\n\nenum authType {Basic = 'basic', Token = 'token'}\n\nexport function ConfigEditor(props: EditorProps): ReactElement {\n    const {secureJsonData} = props.options;\n    const {secureJsonFields} = props.options;\n    const onChangeUrl = useChangeSecureOptions(props, 'url')\n    const onResetUrl = useResetSecureOptions(props, 'url')\n    const onChangeUser = useChangeSecureOptions(props, 'user')\n    const onResetUser = useResetSecureOptions(props, 'user')\n    const onChangePassword = useChangeSecureOptions(props, 'password')\n    const onResetPassword = useResetSecureOptions(props, 'password')\n    const onChangeToken = useChangeSecureOptions(props, 'token')\n    const onResetToken = useResetSecureOptions(props, 'token')\n\n    // console.log(\"ConfigEditor:\" + secureJsonData?.token)\n    // console.log(\"secureJsonFields.token:\" + secureJsonFields.token)\n    const [active, setActive] = React.useState((secureJsonFields && secureJsonFields.token) ? authType.Token : authType.Basic )\n    let alertState = true\n    if (props.options.jsonData.isLoadAlerts === undefined) {\n        props.options.jsonData.isLoadAlerts = true;\n        alertState = props.options.jsonData.isLoadAlerts\n    } else {\n        alertState = props.options.jsonData.isLoadAlerts\n    }\n\n    if (props.options.jsonData.folderUidSuffix === undefined) {\n        props.options.jsonData.folderUidSuffix= getCurrentTime();\n    }\n\n    const [isVisible, setisVisible] = React.useState(false);\n    useEffect(() => {\n        const performVersionCheck = async () => {\n            const supported = await checkGrafanaVersion();\n            setisVisible(supported);\n        };\n        performVersionCheck();\n    }, []);\n\n    const [openConfirm, setOpenConfirm] = React.useState(false);\n\n    const [openAlert, setOpenAlert] = React.useState(false);\n\n    const [openAlertMessage, setOpenAlertMessage] = React.useState(\"\");\n    /**\n     * Here is the cleaning of alarm rules.\n     * When executing the onConfirm method, the testDatasource() function will be called,making it difficult to distinguish whether to delete or add.\n     * Therefore, during the onDismiss event, a deletion operation will be performed, but the button names will be swapped\n     */\n    const clearAlertRules = () => {\n        updateLoadStatus(false);\n        setOpenConfirm(false);\n        deleteAlerts(props.options.uid).then(()=>{\n            return;\n        }).catch((e: any) => {\n            setOpenAlert(true);\n            setOpenAlertMessage(\"Failed to delete alarm rules, reason: \" + e.message)\n            throw e;\n        });\n        \n    };\n\n    const [alertRule, setAlert] = React.useState(alertState);\n    const handleSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateLoadStatus(event.target.checked);\n    };\n\n    const updateLoadStatus = (checked: boolean) => {\n        setAlert(checked);\n        const {onOptionsChange, options} = props;\n        props.options.jsonData.isLoadAlerts = checked\n        onOptionsChange({\n            ...options,\n            jsonData: {\n                ...options.jsonData,\n            },\n        })\n    };\n\n    return (\n        <div className='gf-form-group'>\n            <FieldSet label=\"TDengine Host\">\n                <div className='gf-form max-width-30'>\n                    <FormField label='Host'\n                               labelWidth={8}\n                               inputWidth={22}\n                               tooltip=\"datasource's host\"\n                               onChange={onChangeUrl}\n                               onBlur={onChangeUrl}\n                               onReset={onResetUrl}\n                               value={props.options.url || ''}\n                               placeholder='http://localhost:6041'\n                               required={true}\n                               disabled={props.options.readOnly}\n                    />\n                </div>\n            </FieldSet>\n            <FieldSet label=\"TDengine Authentication\">\n                <TabsBar>\n                    <Tab label={'by user and password'}\n                         active={active === authType.Basic}\n                         onChangeTab={() => setActive(authType.Basic)}\n                    />\n                    <Tab label={'by token'}\n                         active={active === authType.Token}\n                         onChangeTab={() => setActive(authType.Token)}\n                    />\n                </TabsBar>\n                <TabContent>\n                    {\n                        active === authType.Basic &&\n                        <div>\n                            <div className='gf-form max-width-20'>\n                                <FormField label='User'\n                                           labelWidth={8}\n                                           inputWidth={10}\n                                           tooltip=\"datasource's username\"\n                                           onChange={onChangeUser}\n                                           onBlur={onChangeUser}\n                                           onReset={onResetUser}\n                                           value={props.options.user || ''}\n                                           disabled={props.options.readOnly}\n                                           placeholder={secureJsonFields.basicAuth ? 'basic_auth configured' : 'username'}\n                                />\n                            </div>\n                            <div className='gf-form max-width-20'>\n                                <SecretFormField\n                                    isConfigured={(secureJsonFields && secureJsonFields.password) as boolean}\n                                    value={secureJsonData?.password || ''}\n                                    label='Password'\n                                    tooltip=\"datasource's password\"\n                                    labelWidth={8}\n                                    inputWidth={10}\n                                    onReset={onResetPassword}\n                                    onChange={onChangePassword}\n                                    onBlur={onChangePassword}\n                                    disabled={props.options.readOnly || (secureJsonFields && secureJsonFields.password) as boolean}\n                                    placeholder={secureJsonFields.basicAuth ? 'basic_auth configured' : 'password'}\n                                />\n                            </div>\n                        </div>\n                    }\n                    {\n                        active === authType.Token &&\n                        <div className='gf-form max-width-30'>\n                            <SecretFormField\n                                isConfigured={(secureJsonFields && secureJsonFields.token) as boolean}\n                                value={secureJsonData?.token || ''}\n                                label='Token'\n                                tooltip=\"datasource's cloud token\"\n                                placeholder='token of TDengine cloud'\n                                labelWidth={8}\n                                inputWidth={22}\n                                onReset={onResetToken}\n                                onChange={onChangeToken}\n                                onBlur={onChangeToken}\n                                disabled={props.options.readOnly || (secureJsonFields && secureJsonFields.token) as boolean}\n                            />\n                        </div>\n                    }\n                </TabContent>\n            </FieldSet>\n            <div>\n                {isVisible && (\n                    <FieldSet label=\"TDengine Alert\">\n                        <div className='gf-form max-width-20'>\n                            <FormField label=\"Load TDengine Alert\"\n                                       labelWidth={10}\n                                       className='align-center'\n                                       inputEl= {\n                                           <Switch\n                                               onChange={handleSwitchChange}\n                                               value={alertRule}\n                                           />\n                                       }\n                            />\n                        </div>\n                        <div className='gf-form max-width-20'>\n                            <FormField label=\"Clear TDengine Alert\"\n                                       labelWidth={10}\n                                       className='align-center'\n                                       inputEl= {\n                                           <Button variant=\"destructive\"\n                                                   onClick={() => setOpenConfirm(true)}\n                                                   title=\"Clear the TDengine alerts\"\n                                                   icon=\"trash-alt\"\n                                                   size=\"sm\"\n                                           ></Button>\n                                       }\n                            />\n                        </div>\n                        <ConfirmModal\n                            isOpen={openConfirm}\n                            title=\"Clear TDengine Alerts\"\n                            body=\"Are you sure you want to clear alerts?\"\n                            confirmText=\"Cancel\"\n                            dismissText=\"Confirm\"\n                            icon=\"exclamation-triangle\"\n                            onConfirm={() => setOpenConfirm(false)}\n                            onDismiss={() => clearAlertRules()}\n                        />\n\n                        <Modal isOpen={openAlert} title={<div><Icon name='x' color='red' size='xxl' /> <label style={{ color: 'red', fontSize: '16px' }}>Failed to delete rules</label></div>} onDismiss={() => setOpenAlert(false)}>\n                            <p style={{ fontSize: '16px' }}>{openAlertMessage}</p>\n                        </Modal>\n\n\n                    </FieldSet>\n                )}\n            </div>\n        </div>\n    )\n}\n\n","import {useMemo} from 'react'\nimport type {SelectableValue} from '@grafana/data'\n\nexport function useSelectableValue(value: string, label?: string): SelectableValue<string> | undefined {\n    return useMemo(() => {\n        if (!value) {\n            return;\n        }\n\n        return {\n            label: label ?? value,\n            value: value,\n        };\n    }, [label, value]);\n}\n","import {useCallback} from 'react'\nimport type {SelectableValue} from '@grafana/data'\nimport type {ChangeOptions, Query} from '../../types'\nimport type {EditorProps} from './types'\n\ntype OnChangeType = (value: SelectableValue<string>) => void\n\nexport function useChangeSelectableValue(props: EditorProps, options: ChangeOptions<Query>): OnChangeType {\n    const {onChange, onRunQuery, query} = props;\n    const {propertyName, runQuery} = options;\n\n    return useCallback(\n        (selectable: SelectableValue<string>) => {\n            if (!selectable?.value) {\n                return;\n            }\n\n            onChange({\n                ...query,\n                [propertyName]: selectable.value,\n            })\n\n            if (runQuery) {\n                onRunQuery();\n            }\n        },\n        [onChange, onRunQuery, query, propertyName, runQuery]\n    );\n}\n","import { ChangeEvent, useCallback } from 'react'\nimport type { ChangeOptions, Query } from '../../types'\nimport type { EditorProps } from './types'\n\nexport function useChangeOptions(props: EditorProps, options: ChangeOptions<Query>): (value: ChangeEvent<HTMLInputElement>) => void {\n    const { onChange, onRunQuery, query } = props;\n    const { propertyName, runQuery } = options;\n\n    return useCallback(\n        (value: ChangeEvent<HTMLInputElement>) => {\n            if (!value) {\n                return;\n            }\n\n            onChange({\n                ...query,\n                [propertyName]: value.target.value,\n            });\n\n            if (runQuery) {\n                onRunQuery();\n            }\n        },\n        [onChange, onRunQuery, query, propertyName, runQuery]\n    );\n}\n\n// 修改 useChangeOptions 自定义 Hook\nexport function useChangeOptionsArea(props: EditorProps, options: ChangeOptions<any>): (value: ChangeEvent<HTMLTextAreaElement>) => void {\n    const { onChange, onRunQuery, query } = props;\n    const { propertyName, runQuery } = options;\n\n    return useCallback(\n        (value: ChangeEvent<HTMLTextAreaElement>) => {\n            if (!value) {\n                return;\n            }\n\n            onChange({\n                ...query,\n                [propertyName]: value.target.value,\n            });\n\n            if (runQuery) {\n                onRunQuery();\n            }\n        },\n        [onChange, onRunQuery, query, propertyName, runQuery]\n    );\n}\n","import {DataSourcePlugin} from '@grafana/data'\nimport {DataSource} from './datasource';\nimport {ConfigEditor, QueryEditor} from './components'\nimport {DataSourceOptions, Query} from './types';\n\nexport const plugin = new DataSourcePlugin<DataSource, Query, DataSourceOptions>(DataSource)\n    .setConfigEditor(ConfigEditor)\n    .setQueryEditor(QueryEditor)\n","import React, { ReactElement, useState } from 'react'\nimport { Collapse, InlineField, InlineFieldRow, Input, Select, TextArea } from '@grafana/ui'\nimport { useSelectableValue } from './useSelectableValue'\nimport { useChangeSelectableValue } from './useChangeSelectableValue'\nimport type { EditorProps } from './types'\nimport { useChangeOptions, useChangeOptionsArea } from './useChangeString'\n\nexport function QueryEditor(props: EditorProps): ReactElement {\n    const { query } = props;\n    if (!query.queryType) {\n        query.queryType = \"SQL\"\n    }\n    if (!query.formatType) {\n        query.formatType = \"Time series\"\n    }\n\n    const onChangeQueryType = useChangeSelectableValue(props, { propertyName: 'queryType', runQuery: true })\n    const onChangeAlias = useChangeOptions(props, { propertyName: 'alias', runQuery: false })\n    const onblurAlias = useChangeOptions(props, { propertyName: 'alias', runQuery: true })\n    const onChangeSql = useChangeOptionsArea(props, { propertyName: 'sql', runQuery: false })\n    const onblurSql = useChangeOptionsArea(props, { propertyName: 'sql', runQuery: true })\n    const onchangeTimeShiftPeriod = useChangeOptions(props, { propertyName: 'timeShiftPeriod', runQuery: false })\n    const onchangeTimeShiftUnit = useChangeSelectableValue(props, { propertyName: 'timeShiftUnit', runQuery: false })\n    const onChangeFormatType = useChangeSelectableValue(props, { propertyName: 'formatType', runQuery: true })\n    const onchangeGroupColumns = useChangeOptions(props, { propertyName: 'colNameToGroup', runQuery: false })\n    const onblurGroupColumns = useChangeOptions(props, { propertyName: 'colNameToGroup', runQuery: true })\n    const onchangeFormatStr = useChangeOptions(props, { propertyName: 'colNameFormatStr', runQuery: false })\n    const onblurFormatStr = useChangeOptions(props, { propertyName: 'colNameFormatStr', runQuery: true })\n\n    const ShowGeneratedSql = () => {\n        const [isOpen, setIsOpen] = useState<boolean>(false)\n        let sql = props.datasource.getGenerateSql()\n\n        return (\n            <Collapse\n                label='Generate SQL'\n                className='gf-form-label width-10'\n                collapsible={true}\n                isOpen={isOpen}\n                onToggle={() =>\n                    setIsOpen(!isOpen)\n                }\n            >\n                <p>{sql}</p>\n            </Collapse>\n        )\n    }\n    const ShowHelpCollapse = () => {\n        const [isOpen, setIsOpen] = useState<boolean>(false)\n        let help = 'Use any SQL that can return Resultset such as:</br>' +\n            '- [[timestamp1, value1], [timestamp2, value2], ... ]</br>' +\n            '</br>' +\n            'Macros:</br>' +\n            '- $from -&gt; start timestamp of panel</br>' +\n            '- $to -&gt; stop timestamp of panel</br>' +\n            '- $interval -&gt; interval of panel</br>' +\n            '</br>' +\n            'Example of SQL:</br>' +\n            '&nbsp;&nbsp;SELECT count(*)</br> FROM db.table WHERE ts > $from and ts < $to INTERVAL ($interval)'\n\n        return (\n            <Collapse\n                label='Show Help'\n                className='gf-form-label width-10'\n                collapsible={true}\n                isOpen={isOpen}\n                onToggle={() =>\n                    setIsOpen(!isOpen)\n                }\n            >\n                <p dangerouslySetInnerHTML={{ __html: help }}></p>\n            </Collapse>\n        )\n    }\n\n    const queryTypeOptions = [\n        { label: 'SQL', value: 'SQL' },\n        { label: 'Arithmetic', value: 'Arithmetic' }\n    ]\n    const formatTypeOptions = [\n        { label: 'Time series', value: 'Time series' },\n        { label: 'Table', value: 'Table' }\n    ]\n    const timeShiftUnit = [\n        { label: 'seconds', value: 'seconds' },\n        { label: 'minutes', value: 'minutes' },\n        { label: 'hours', value: 'hours' },\n        { label: 'days', value: 'days' },\n        { label: 'weeks', value: 'weeks' },\n        { label: 'months', value: 'months' }\n    ]\n\n    return (\n        <div className='gf-form-group'>\n            <InlineFieldRow>\n                <InlineField id=\"queryType\" label='Query Type' labelWidth={20}>\n                    <Select\n                        inputId={\"queryType\"}\n                        width={20}\n                        options={queryTypeOptions}\n                        defaultValue={queryTypeOptions[0]}\n                        onChange={onChangeQueryType}\n                        value={useSelectableValue(query.queryType)}\n                    />\n                </InlineField>\n                <InlineField label='Alias By' labelWidth={20}>\n                    <Input\n                        width={20}\n                        onChange={onChangeAlias}\n                        onBlur={onblurAlias}\n                        value={query.alias ?? ''}\n                        placeholder={\"Naming pattern: a,{{'{{'}}col}}\"}\n                    />\n                </InlineField>\n                <div className=\"gf-form gf-form--grow\">\n                    <div className=\"gf-form-label gf-form-label--grow\"></div>\n                </div>\n            </InlineFieldRow>\n\n            <InlineFieldRow>\n                <InlineField label='Input Sql' labelWidth={20} tooltip='' grow>\n                    <TextArea\n                        style={{ width: \"100%\", minWidth: \"800px\" }}\n                        rows={5} // 设置行数\n                        className={'min-width-30 max-width-100 gf-form--grow'}\n                        placeholder={'select _wstart as ts, avg(mem_free), dnode_ep from log.taosd_dnodes_info where _ts>=$from and _ts<=$to partition by dnode_ep interval($interval)'}\n                        onChange={onChangeSql}\n                        onBlur={onblurSql}\n                        value={query.sql}\n                    />\n                </InlineField>\n            </InlineFieldRow>\n\n            <InlineFieldRow>\n                <ShowGeneratedSql />\n                <ShowHelpCollapse />\n                <InlineField id=\"formatType\" label='Format new col' labelWidth={20}>\n                    <Select\n                        inputId={\"formatType\"}\n                        width={20}\n                        options={formatTypeOptions}\n                        defaultValue={formatTypeOptions[0]}\n                        onChange={onChangeFormatType}\n                        value={useSelectableValue(query.formatType)}\n                    />\n                </InlineField>\n            </InlineFieldRow>\n\n            <InlineFieldRow>\n                <InlineField label='Time Shift' labelWidth={20} tooltip=''>\n                    <Input\n                        width={20}\n                        onChange={onchangeTimeShiftPeriod}\n                        onBlur={onchangeTimeShiftPeriod}\n                        value={query.timeShiftPeriod ?? ''}\n                        placeholder={'period number like: 1'}\n                    />\n                </InlineField>\n                <InlineField label='Time Shift Unit' labelWidth={20} tooltip=''>\n                    <Select\n                        width={20}\n                        options={timeShiftUnit}\n                        onChange={onchangeTimeShiftUnit}\n                        value={useSelectableValue(query.timeShiftUnit)}\n                    />\n                </InlineField>\n                <div className=\"gf-form gf-form--grow\">\n                    <div className=\"gf-form-label gf-form-label--grow\"></div>\n                </div>\n            </InlineFieldRow>\n\n            <InlineFieldRow>\n                <InlineField label='Group By Column(s)' labelWidth={20} tooltip=''>\n                    <Input\n                        width={20}\n                        onChange={onchangeGroupColumns}\n                        onBlur={onblurGroupColumns}\n                        value={query.colNameToGroup ?? ''}\n                    />\n                </InlineField>\n                <InlineField label='Group By Format' labelWidth={20} tooltip=''>\n                    <Input\n                        width={20}\n                        onChange={onchangeFormatStr}\n                        onBlur={onblurFormatStr}\n                        value={query.colNameFormatStr ?? ''}\n                        placeholder={'prefix_{{group_field}}_suffix'}\n                    />\n                </InlineField>\n                <div className=\"gf-form gf-form--grow\">\n                    <div className=\"gf-form-label gf-form-label--grow\"></div>\n                </div>\n            </InlineFieldRow>\n        </div>\n    );\n}\n\n\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__WEBPACK_EXTERNAL_MODULE__781__","__WEBPACK_EXTERNAL_MODULE__531__","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__241__","__WEBPACK_EXTERNAL_MODULE__308__","__WEBPACK_EXTERNAL_MODULE__468__","__WEBPACK_EXTERNAL_MODULE__959__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","p","nc","slice","lastIndexOf","deleteAlerts","datasourceName","folderUid","getFolderUid","deletGroupAlerts","deleteFolder","error","console","ruleGroup","Promise","resolve","reject","path","getBackendSrv","delete","responseType","showErrorAlert","then","response","catch","datasourceUid","checkGrafanaVersion","versionParts","config","buildInfo","version","split","parseInt","DataSource","DataSourceApi","query","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","targets","filter","queryType","sql","hide","all","generateSql","lastGeneratedSql","request","res","postQuery","arithmeticQueries","flat","err","desc","getAlertFolder","uid","backendSrv","status","createAlertFolder","req","title","name","folderUidSuffix","post","getAlerts","rules","loadAlerts","put","headers","message","modifyAlertDataSource","folderUID","model","datasource","sendInitAlert","bOk","testDatasource","_","isLoadAlerts","metricFindQuery","column_meta","values","text_index","string_value","value_type","toUpperCase","text","uniqBy","getGenerateSql","serverVersion","datasourceRequest","url","baseUrl","method","startsWith","querySql","querySqlUtc","convertResult","src","dist","code","rows","forEach","getRowAlias","alias","replaceObject","replace","match","g1","g2","g3","queryStart","queryEnd","intervalMs","range","from","toISOString","to","template","scopedVars","indexOf","allVariables","getVariables","variable","current","String","formatColumn","colFormat","labelName","placeholders","placeholder","field","replaceAll","long2wide","recv","by","header","name2idx","h","fromPairs","colKick","colLock","partition","newHeader","fields","colValue","col","idx","row","uniq","v","reduce","acc","cur","flatten","labels","ts","orderBy","label","f","__values__","newField","keys","t","groupDataByColName","dataRecv","formatType","groupBy","colNameToGroup","m","s","colNameFormatStr","groupData","rowsIndex","groupColValue","colName","groupValue","sort","groupDataRet","indexKeys","dataGroupList","aliasList","aliasListIndex","cols","timeSeriesIndex","findIndex","columns","type","refId","aliasRow","resultItem","datapoints","timeShiftDuration","moment","timeShiftPeriod","timeShiftUnit","tz","add","valueOf","expression","targetRefIds","flatMap","targetResults","datapoint","dataArithmetic","functionArgs","functionBody","expressionFunction","Function","aliasListResult","entries","args","Array","isArray","generateTimeshift","generateAlias","constructor","instanceSettings","super","getTemplateSrv","jsonData","useChangeSecureOptions","props","propertyName","onOptionsChange","useCallback","event","user","basicAuthUser","secureJsonData","password","basicAuth","encode","basicAuthPassword","token","input","_keyStr","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","charCodeAt","isNaN","charAt","useResetSecureOptions","secureJsonFields","locals","SecretFormField","FormField","LegacyForms","useSelectableValue","useMemo","useChangeSelectableValue","onChange","onRunQuery","runQuery","selectable","useChangeOptions","useChangeOptionsArea","plugin","DataSourcePlugin","setConfigEditor","onChangeUrl","onResetUrl","onChangeUser","onResetUser","onChangePassword","onResetPassword","onChangeToken","onResetToken","active","setActive","React","alertState","now","Date","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","getCurrentTime","isVisible","setisVisible","useEffect","performVersionCheck","supported","openConfirm","setOpenConfirm","openAlert","setOpenAlert","openAlertMessage","setOpenAlertMessage","clearAlertRules","updateLoadStatus","alertRule","setAlert","checked","div","className","FieldSet","labelWidth","inputWidth","tooltip","onBlur","onReset","required","disabled","readOnly","TabsBar","Tab","onChangeTab","TabContent","isConfigured","inputEl","Switch","Button","variant","onClick","icon","size","ConfirmModal","isOpen","body","confirmText","dismissText","onConfirm","onDismiss","Modal","Icon","color","fontSize","setQueryEditor","onChangeQueryType","onChangeAlias","onblurAlias","onChangeSql","onblurSql","onchangeTimeShiftPeriod","onchangeTimeShiftUnit","onChangeFormatType","onchangeGroupColumns","onblurGroupColumns","onchangeFormatStr","onblurFormatStr","ShowGeneratedSql","setIsOpen","useState","Collapse","collapsible","onToggle","ShowHelpCollapse","dangerouslySetInnerHTML","__html","queryTypeOptions","formatTypeOptions","InlineFieldRow","InlineField","Select","inputId","width","defaultValue","Input","grow","TextArea","minWidth"],"sourceRoot":""}